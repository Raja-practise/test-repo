name: Push Repository Variables

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Target repository (format: team_name/repo_name). Leave blank to update all listed repos."
        required: false
      dry_run:
        description: "Set to 'true' to simulate without applying changes"
        required: false
        default: "false"

permissions:
  contents: read

jobs:
  sync-variables:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.SYNC_PAT }}
        run: gh auth status

      - name: Push variables to target repositories
        env:
          GH_TOKEN: ${{ secrets.SYNC_PAT }}
          CENTRAL_REPO: ${{ github.repository }}
          INPUT_REPO: ${{ github.event.inputs.repo }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          set -euo pipefail

          echo "üì¶ Using Central Repo: $CENTRAL_REPO"
          echo "üìç Target Repo (if set): $INPUT_REPO"
          echo "üß™ Dry Run Mode: $DRY_RUN"
          echo

          if [ -n "$INPUT_REPO" ]; then
            repos_list="$INPUT_REPO"
          else
            repos_list=$(grep -v '^#' repositories.txt | sed '/^\s*$/d')
          fi

          mapfile -t ALLOWED_VARS < repo-vars.txt

          for FULL_REPO in $repos_list; do
            echo "üîÑ Processing $FULL_REPO..."
            ORG_NAME=$(echo "$FULL_REPO" | cut -d'/' -f1)
            REPO_NAME=$(echo "$FULL_REPO" | cut -d'/' -f2)

            NORMALIZED_TEAM=$(echo "$ORG_NAME" | tr '[:upper:]' '[:lower:]' | tr '-' '_' | tr '/' '_')
            VAR_PREFIX=$(echo "${NORMALIZED_TEAM}_variable_" | tr '[:lower:]' '[:upper:]')

            echo "üîç Using VAR_PREFIX: $VAR_PREFIX"

            for var in "${ALLOWED_VARS[@]}"; do
              full_var_name="${VAR_PREFIX}${var}"
              echo "üîé Looking for: $full_var_name"

              value=$(gh variable get "$full_var_name" -R "$CENTRAL_REPO" -q .value 2>/dev/null || echo "")

              if [ -z "$value" ]; then
                echo "‚ö†Ô∏è  Skipped: No variable named '$full_var_name' in central repository."
                continue
              fi

              if [ "$DRY_RUN" == "true" ]; then
                echo "üß™ [Dry-run] Would set variable '$var' in $FULL_REPO"
              else
                gh variable set "$var" -R "$FULL_REPO" -b"$value"
                echo "‚úÖ Set variable '$var' in $FULL_REPO"
              fi
            done

            echo "‚úÖ Completed processing $FULL_REPO"
            echo "----------------------------------------"
          done
