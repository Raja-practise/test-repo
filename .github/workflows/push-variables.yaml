name: Push Repository Variables

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Target repository (format: org/repo). Leave blank to sync to all listed repos"
        required: false
      dry_run:
        description: "Set to 'true' to simulate the sync without applying"
        required: false
        default: "false"

permissions:
  contents: read

jobs:
  push-variables:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.SYNC_PAT }}
        run: gh auth status

      - name: Push variables to target repositories
        env:
          GH_TOKEN: ${{ secrets.SYNC_PAT }}
          CENTRAL_REPO: ${{ github.repository }}
          INPUT_REPO: ${{ github.event.inputs.repo }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          set -euo pipefail
          echo "üîê Central Repo: $CENTRAL_REPO"
          echo "üéØ Input Repo: $INPUT_REPO"
          echo "üß™ Dry Run: $DRY_RUN"
          echo "-------------------------------------"

          if [ -n "$INPUT_REPO" ]; then
            repos_list="$INPUT_REPO"
          else
            repos_list=$(grep -v '^#' repositories.txt | sed '/^\s*$/d')
          fi

          mapfile -t VARS < repo-vars.txt

          for FULL_REPO in $repos_list; do
            echo "üîÑ Processing $FULL_REPO..."

            for var in "${VARS[@]}"; do
              echo "üîç Looking for variable: $var"

              # Attempt to retrieve from central repo
              value=$(gh variable get "$var" -R "$CENTRAL_REPO" -q .value 2>/dev/null || echo "")

              if [ -z "$value" ]; then
                echo "‚ö†Ô∏è Skipped: Variable '$var' not found in $CENTRAL_REPO"
                continue
              fi

              if [ "$DRY_RUN" == "true" ]; then
                echo "üß™ [Dry-run] Would push variable '$var' to $FULL_REPO"
              else
                gh variable set "$var" -R "$FULL_REPO" -b"$value"
                echo "‚úÖ Pushed variable '$var' to $FULL_REPO"
              fi
            done

            echo "‚úÖ Done with $FULL_REPO"
            echo "-------------------------------------"
          done
