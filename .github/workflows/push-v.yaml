name: Push Variables

on:
  workflow_dispatch:
    inputs:
      team:
        description: "Target repository (format: org/repo). Leave blank to update all listed repos."
        required: false
        type: string
      dry_run:
        description: "If 'true', perform a dry-run (no changes, only log actions)"
        required: false
        default: "false"
        type: string

jobs:
  push-variables:
    if: |
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch') &&
      github.ref_name == 'main' &&
      github.event.repository.fork == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup jq
        run: sudo apt-get install -y jq

      - name: Load and push variables to target repositories
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GHEC_BOT_TOKEN }}
          CENTRAL_REPO: ${{ github.repository }}
          INPUT_REPO: ${{ github.event.inputs.team }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          set -euo pipefail

          echo "üìç Using Central Repo: $CENTRAL_REPO"
          echo "üìé Target Repo (if set): $INPUT_REPO"
          echo "üåø Dry Run Mode: $DRY_RUN"

          # Load variables from the central repo
          variables=$(gh variable list -R "$CENTRAL_REPO" --json name,value | jq -r '[.[] | { (.name): .value }] | add')
          if [ -z "$variables" ] || [ "$variables" == "{}" ]; then
            echo "‚ùå No variables found in $CENTRAL_REPO"
            exit 0
          fi

          filtered_variables=$(echo "$variables" | jq 'with_entries(select(.key | test("^github_"; "i") | not))')

          if [ "$(echo "$filtered_variables" | jq length)" -eq 0 ]; then
            echo "‚ùå No valid variables to push after filtering"
            exit 0
          fi

          # Determine target repositories
          if [ -n "$INPUT_REPO" ]; then
            repos=("$INPUT_REPO")
          else
            mapfile -t repos < repositories.txt
          fi

          for FULL_REPO in "${repos[@]}"; do
            echo ""
            echo "üß© Processing $FULL_REPO..."

            for var in $(jq -r 'keys[]' <<< "$filtered_variables"); do
              value=$(jq -r --arg var "$var" '.[$var]' <<< "$filtered_variables")

              if [ "$DRY_RUN" == "true" ]; then
                echo "üìù [Dry-run] Would set variable '$var' in $FULL_REPO"
              else
                gh variable set "$var" -R "$FULL_REPO" -b"$value"
                echo "‚úÖ Set variable '$var' in $FULL_REPO"
              fi
            done

            echo "‚úÖ Completed processing $FULL_REPO"
            echo "------------------------------------"
          done
